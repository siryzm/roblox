local tween = game:GetService('TweenService');
local user = game:GetService('UserInputService');

local listening,found_keybind = nil,nil;
local options = {};
local allowed_keys = {'B','C','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','T','U','V','X','Y','Z'};

-- INITIAL FUNCTIONS
function createName()
return (math.random(0,9)..math.random(0,9)..math.random(0,9)..math.random(0,9)..math.random(0,9)..math.random(0,9)..math.random(0,9)..math.random(0,9)..math.random(0,9));
end

function create_corner(corner,frame)
if (corner) then
local corner = Instance.new('UICorner');
	corner.Name = 'corner';
	corner.CornerRadius = UDim.new(0,24);
	corner.Parent = frame;
return corner;
end end

function setupText(label)
	label.Font = Enum.Font.SourceSansBold;
	label.TextColor3 = Color3.fromRGB(255,255,255);
	label.TextStrokeTransparency = .5;
	label.TextStrokeColor3 = Color3.fromRGB(0,0,0);
	label.TextScaled = true;
	label.TextWrapped = true;
end

function create_textbox(corner)
local textbox = Instance.new('TextBox');
	textbox.BorderSizePixel = 0;
setupText(textbox);
create_corner(corner,textbox);
return textbox;
end

function create_label()
local label = Instance.new('TextLabel');
	label.BackgroundTransparency = 1;
setupText(label);
return label;
end

function create_button(corner)
local button = Instance.new('TextButton');
setupText(button);
	button.BorderSizePixel = 0;
create_corner(corner,button);
return button;
end

function create_frame(corner)
local frame = Instance.new('Frame');
	frame.BorderSizePixel = 0;
create_corner(corner,frame);
return frame;
end

function find_keybind(title)
for keybind,t in pairs(options) do
if (t.Title == title) then
return keybind;
end end end

function keybind_used(input)
for keybind,_ in pairs(options) do
if (keybind == input) then
return false;
end end
return true;
end

function create_teleport()
local frame = create_frame(true);
	frame.BackgroundColor3 = Color3.fromRGB(50,50,50);
	frame.Size = UDim2.new(.35,0,.6,0);
	frame.Position = UDim2.new(.6,0,.3,0);
local scroll = Instance.new('ScrollingFrame');
	scroll.BackgroundTransparency = 1;
	scroll.BorderSizePixel = 0;
	scroll.ScrollBarThickness = 5;
	scroll.Size = UDim2.new(1,0,1,0);
	scroll.CanvasSize = UDim2.new(0,0,0,0);
	scroll.Parent = frame;
local list = Instance.new('UIListLayout');
	list.Padding = UDim.new(0,10);
	list.Parent = scroll;
return {Frame = frame,List = list,Scroll = scroll};
end

function create_tp_button(plr)
local player = game.Players.LocalPlayer;
local button = create_button(true);
	button.Text = plr.Name..' | '..plr.DisplayName;
	button.Size = UDim2.new(1,0,0,25);
	button.BackgroundColor3 = Color3.fromRGB(85,0,127);
	button.Name = plr.Name;

button.MouseButton1Down:connect(function()
local teleport_speed = 0;
	teleport_speed = math.clamp((((player.Character.PrimaryPart.CFrame.Position-plr.Character.PrimaryPart.CFrame.Position).magnitude)/450),0,5);
	tween:Create(player.Character.PrimaryPart,TweenInfo.new(teleport_speed,Enum.EasingStyle.Linear),{CFrame = plr.Character.PrimaryPart.CFrame}):Play();
end)

return button;
end

function create_option(pos,title,keybind,power)
local frame = create_frame(true);
	frame.BackgroundColor3 = Color3.fromRGB(50,50,50);
	frame.Size = UDim2.new(.5,0,.15,0);
	frame.Position = pos;

local label = create_label();
	label.Text = title;
	label.Size = UDim2.new(.4,0,1,0);
	label.Parent = frame;

local keybind_button = create_button(true);
	keybind_button.Text = keybind
	keybind_button.Size = UDim2.new(.1,0,1,0);
	keybind_button.Position = UDim2.new(.4,0,0,0);
	keybind_button.BackgroundColor3 = Color3.fromRGB(85,0,127);
	keybind_button.Parent = frame;

local enabled = create_label();
	enabled.Size = UDim2.new(.25,0,1,0);
	enabled.Position = UDim2.new(.5,0,0,0);
	enabled.BackgroundTransparency = 0;
	enabled.BackgroundColor3 = Color3.fromRGB(170,0,0);
	create_corner(true,enabled);
	enabled.Text = 'Disabled';
	enabled.Parent = frame;

local strength = create_textbox(true);
	strength.Size = UDim2.new(.25,0,1,0);
	strength.Position = UDim2.new(.75,0,0,0);
	strength.Text = power;
	strength.BackgroundColor3 = Color3.fromRGB(85,0,127);
	strength.Parent = frame;

options[Enum.KeyCode[keybind]] = {Keybind_Button = keybind_button,Title = title,Enabled = enabled,Active = false,Power = power};

strength.FocusLost:connect(function()
if (tonumber(strength.Text)) then
local new_keybind = find_keybind(title);
	options[new_keybind].Power = tonumber(strength.Text);
end end)

keybind_button.MouseButton1Down:connect(function()
if (not listening) then
	listening = true;
local old_keybind = find_keybind(title);
	options[old_keybind].Keybind_Button.BackgroundColor3 = Color3.fromRGB(0,255,0);
	found_keybind = nil;
repeat task.wait(); until (found_keybind);
local keybind_table = options[old_keybind];
	options[old_keybind].Keybind_Button.Text = user:GetStringForKeyCode(found_keybind);
	options[old_keybind].Keybind_Button.BackgroundColor3 = Color3.fromRGB(85,0,127);
	options[old_keybind].Active = false;
	options[old_keybind] = nil;
	options[found_keybind] = keybind_table;
	listening = false;
end end)

return frame;
end


function create_drag(frame)
local dragging = nil;
local dragInput = nil;
local dragStart = nil;
local startPos = nil;

local function update(input)
local delta = (input.Position-dragStart);
local pos = UDim2.new(startPos.X.Scale,(startPos.X.Offset+delta.x),startPos.Y.Scale,(startPos.Y.Offset+delta.Y));
	frame.Position = pos;
end

frame.InputBegan:connect(function(input)
if (input.UserInputType == Enum.UserInputType.MouseButton1) then
	dragging = true;
	dragStart = input.Position;
	startPos = frame.Position;

input.Changed:connect(function()
if (input.UserInputState == Enum.UserInputState.End) then
	dragging = false;
end end) end end)

frame.InputChanged:connect(function(input)
if (input.UserInputType == Enum.UserInputType.MouseMovement) then
	dragInput = input;
end end)

user.InputChanged:connect(function(input)
if ((input == dragInput) and dragging) then
	update(input);
end end)
end

-- GUI CREATION
local gui = Instance.new('ScreenGui');
	gui.Name = createName();
	syn.protect_gui(gui);
	gui.Parent = game:GetService('CoreGui');

local main_frame = create_frame(true);
	main_frame.Size = UDim2.new(0,400,0,200);
	main_frame.Position = UDim2.new(.5,-200,.5,-100);
	main_frame.BackgroundColor3 = Color3.fromRGB(25,25,25);
	main_frame.Parent = gui;
	
create_drag(main_frame);

local title = create_label();
	title.Size = UDim2.new(.9,0,.15,0);
	title.Position = UDim2.new(.05,0,.1,0);
	title.Text = "Dubia Hub";
	title.Parent = main_frame;

local option1 = create_option(UDim2.new(.05,0,.3,0),'Speed','Z',2);
	option1.Parent = main_frame;

local option2 = create_option(UDim2.new(.05,0,.525,0),'Spin','X',25);
	option2.Parent = main_frame;

local option3 = create_option(UDim2.new(.05,0,.75,0),'Jump','C',5);
	option3.Parent = main_frame;

local teleport_frame = create_teleport();
	teleport_frame.Frame.Parent = main_frame;

coroutine.wrap(function()
local player = game.Players.LocalPlayer;
game.Players.PlayerAdded:connect(function(plr) 
	player = game.Players.LocalPlayer;
if ((plr ~= player) and (not teleport_frame.Scroll:FindFirstChild(plr.Name))) then
local tp_button = create_tp_button(plr);
	tp_button.Parent = teleport_frame.Scroll;
	teleport_frame.Scroll.CanvasSize = UDim2.new(0,0,0,teleport_frame.List.AbsoluteContentSize.Y);
end end)
game.Players.PlayerRemoving:connect(function(plr)
if (teleport_frame.Scroll:FindFirstChild(plr.Name)) then
	teleport_frame.Scroll:WaitForChild(plr.Name):Destroy();
end end)
for _,p in pairs(game.Players:GetPlayers()) do
if ((p ~= player) and (not teleport_frame.Scroll:FindFirstChild(p.Name))) then
local tp_button = create_tp_button(p);
	tp_button.Parent = teleport_frame.Scroll;
	teleport_frame.Scroll.CanvasSize = UDim2.new(0,0,0,teleport_frame.List.AbsoluteContentSize.Y);	
end end end)();

-- DO DUBIOUS ACTIONS
function keybindAction(option)
repeat
local player = game.Players.LocalPlayer;
local character = player.Character;
local camera = workspace.CurrentCamera;
if (character) then
if (string.match(option.Title,'Speed')) then
local velocity = ((camera.CFrame.LookVector)*option.Power);
	velocity = Vector3.new(velocity.x,0,velocity.z);
	character.PrimaryPart.AssemblyLinearVelocity += velocity;
end 
if (string.match(option.Title,'Spin')) then
	character.PrimaryPart.AssemblyAngularVelocity = Vector3.new(option.Power,option.Power,option.Power);
end 
if (string.match(option.Title,'Jump')) then
	character.PrimaryPart.AssemblyLinearVelocity += Vector3.new(0,option.Power,0);
end end
task.wait();
until ((not option.Active) or (not character));
end

-- ACTIVATING/DEACTIVATING FUNCTION
function initiate(option)
	option.Active = not option.Active;
if (option.Active) then
coroutine.wrap(keybindAction)(option);
end
	option.Enabled.Text = option.Active and 'Enabled' or 'Disabled';
	option.Enabled.BackgroundColor3 = option.Active and Color3.fromRGB(0,255,0) or Color3.fromRGB(170,0,0);
end

-- KEYBIND LISTENING
user.InputBegan:connect(function(input,processed)
if ((not processed) and (options[input.KeyCode]) and (found_keybind)) then
initiate(options[input.KeyCode]);
end end)

user.InputEnded:connect(function(input,processed)
if ((not processed) and options[input.KeyCode]) then
initiate(options[input.KeyCode]);
end end)

-- KEYBIND SETTING
user.InputBegan:connect(function(input,processed)
if (not processed) then
if (table.find(allowed_keys,user:GetStringForKeyCode(input.KeyCode)) and keybind_used(input.KeyCode)) then
	found_keybind = input.KeyCode;
end end end)
